- name: mine
  hosts: "{{ group }}"
  vars:
    - mine_project: XXXXX
  become: true
  gather_facts: false
  tasks:
    - name: Create Project Directory
      ansible.builtin.file:
        path: /opt/{{ mine_project }}
        state: directory
        mode: 0744
    # - name: Create other directories
    #   ansible.builtin.file:
    #     path: "{{ item }}"
    #     state: directory
    #     mode: 0777
    #   loop:
    #     - /opt/{{ mine_project }}/data
    #     - /opt/{{ mine_project }}/xxx
    - name: Scp docker compose file
      ansible.builtin.copy:
        src: ./docker-compose.yaml
        dest: /opt/{{ mine_project }}/docker-compose.yaml
        mode: '0744'
  
  # # 拷贝镜像，加载镜像
  #   - name: Copy compressed Docker images to /tmp on the target host
  #     ansible.builtin.copy:
  #       src: ./docker-images.tar.gz  # 本地压缩文件路径
  #       dest: /tmp/docker-images.tar.gz  # 目标主机路径
  #       mode: '0644'
  #   - name: Extract Docker images in /tmp on the target host
  #     unarchive:
  #       src: /tmp/docker-images.tar.gz  # 压缩文件路径
  #       dest: /tmp/ # 解压路径
  #       remote_src: yes  # 表示压缩文件已存在于目标主机
  #       mode: '0755'
  #   - name: Load Docker images on the target host
  #     shell: "docker load -i {{ item }}"
  #     args:
  #       chdir: /tmp/docker-images/  # 切换到解压后的目录
  #     with_fileglob:
  #       - "/tmp/docker-images/*.image"  # 匹配解压后的所有 .image 文件

    - name: Run {{ mine_project }}
      shell: "docker compose up -d"
      args:
        chdir: /opt/{{ mine_project }}

    - name: Check {{ mine_project }} Process
      shell: "docker compose ps"
      register: miner_status
      args:
        chdir: /opt/{{ mine_project }}
    - name: Display miner_status
      ansible.builtin.debug:
        msg: "{{ miner_status.stdout_lines }}"

# 部署启动挖矿程序 ansible-playbook -i ./local.hosts.conf deploybydocker.yaml -e "group=run"